import "native/os"
import "native/path"
import "io"
import "arrays"
import "strings"

const inputPath str = path::resolve(path::dirname(__FILE__), "input.txt")

def parse(input str) {
  return strings::split(input, ' ')
}

def blink(pebbles arr) arr {
  const result arr = []

  for mut i num = 0, ~pebbles - 1 {
    if pebbles[i] == "0" {
      result[~result] = "1"
    } else if ~pebbles[i] % 2 == 0 {
      const pebble str = pebbles[i]
      const first_half str = strings::substring(pebble, 0, ~pebble / 2)
      const second_half str = strings::substring(pebble, ~pebble / 2, ~pebble)

      result[~result] = str(num(first_half))
      result[~result] = str(num(second_half))
    } else {
      result[~result] = str(num(pebbles[i]) * 2024)
    }
  }

  return result
}

def run(input str) {
  mut pebbles arr = parse(input)

  for mut i num = 1, 25 {
    io::println(i - 1, ~pebbles)
    pebbles = blink(pebbles)
  }

  io::println(~pebbles)
}

# run("125 17")
# I gave up waiting after 7 hours of running this code
# Do not run this code
run(os::readFile(inputPath))
